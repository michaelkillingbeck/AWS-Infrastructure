AWSTemplateFormatVersion: '2010-09-09'
Description:  Lambda function for ImageColourSwap
Resources:
  ICSProcessingFunction:
    Properties:
      Code:
        S3Bucket: artifactstore-mk-test
        S3Key:  ImageColourSwapLambda
      Handler:  Lambda::ImageColourSwap.Lambda.Program::Handler
      MemorySize: 512
      Role: arn:aws:iam::267855555195:role/service-role/CodePipelineUpdateLambda-role-hty0oci1
      Runtime:  dotnet6
      Timeout:  30
    Type: AWS::Lambda::Function
  ICSLambdaPermission:
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref ICSProcessingFunction
      Principal:  'apigateway.amazonaws.com'
    Type: 'AWS::Lambda::Permission'
  ImageColourSwapAPI:
    Properties:
      Name: ImageColourSwap
    Type: 'AWS::ApiGateway::RestApi'
  Resource:
    Properties:
      ParentId: !GetAtt ImageColourSwapAPI.RootResourceId
      PathPart: ics
      RestApiId:  !Ref ImageColourSwapAPI
    Type: 'AWS::ApiGateway::Resource'
  GetMethod:
    Properties:
      AuthorizationType:  NONE
      HttpMethod: GET
      Integration:
        IntegrationHttpMethod:  POST
        IntegrationResponses:
          - StatusCode: 200
        PassthroughBehavior: WHEN_NO_TEMPLATES
        RequestTemplates: { 
          "application/json": "#set($inputRoot = $input.path('$')) { \"palletteImage\": \"$input.params('palletteImage')\", \"sourceImage\": \"$input.params('sourceImage')\" }"
        }  
        Type: AWS
        Uri:  {"Fn::Join" : 
          ["", ["arn:aws:apigateway:", {"Ref":"AWS::Region"},":lambda:path/2015-03-31/functions/",{"Fn::GetAtt": ["ICSProcessingFunction", "Arn"]}, "/invocations"]
        ]}
      MethodResponses:
        - StatusCode: "200"
          ResponseModels:  { "application/json": "Empty" }
      RequestParameters: {
        method.request.querystring.palletteImage: true,
        method.request.querystring.sourceImage: true
      }
      ResourceId: !GetAtt ImageColourSwapAPI.RootResourceId
      RestApiId:  !Ref ImageColourSwapAPI
    Type: 'AWS::ApiGateway::Method' 
  DemoLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt ICSProcessingFunction.Arn
      Action: "lambda:InvokeFunction"
      Principal: apigateway.amazonaws.com
  ApiDeployment:
    DependsOn:  GetMethod
    Properties:
      Description:  'Test Description'
      RestApiId:  !Ref ImageColourSwapAPI
      StageName:  Integration
    Type: 'AWS::ApiGateway::Deployment'
  LambdaParameter:
    DependsOn:  ApiDeployment
    Properties:
      Name: IntegrationProcessingUri
      Type: String
      Tier: Standard
      Value: !Ref ImageColourSwapAPI
    Type: 'AWS::SSM::Parameter'