AWSTemplateFormatVersion: 2010-09-09

Parameters:
  AmiParameter:
    Default:  ami-062ec2beae7c79c8e
    Description: The AMI Id to use for the instance
    Type: String
  InstanceProfileParameter:
    Description:  The name of the IAM role the EC2 Instance should user
    Type: String
  InstanceTypeParameter:
    Default:  t4g.nano
    Description: The type of instance to create
    Type: String

Resources:
  InternetGateway:
    Properties:
      Tags:
        -
          Key:  Environment
          Value:  Integration
        -
          Key: Name
          Value:  InternetGateway
    Type: AWS::EC2::InternetGateway

  InternetGatewayRoute:
    DependsOn: InternetGateway
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref VPCRouteTable
    Type: AWS::EC2::Route

  KeyPair:
    Properties:
      KeyName:  IntegrationWebServerKeyPair
      Tags:
        -
          Key:  Environment
          Value:  Integration
        -
          Key: Name
          Value:  WebServerKeyPair
    Type: AWS::EC2::KeyPair

  SecurityGroup:
    Properties:
      GroupDescription:  Group to allow HTTP and SSH access
      SecurityGroupIngress:
        - IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: 22
          ToPort: 22
        - IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: 80
          ToPort: 80
        - IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: 443
          ToPort: 443
      Tags:
        -
          Key:  Environment
          Value:  Integration
        -
          Key: Name
          Value:  SecurityGroup
      VpcId:  !Ref VPC
    Type: AWS::EC2::SecurityGroup

  Subnet:
    DependsOn: VPC
    Properties:
      CidrBlock:  10.0.0.0/16
      MapPublicIpOnLaunch: True
      Tags:
        -
          Key:  Environment
          Value:  Integration
        -
          Key: Name
          Value:  Subnet
      VpcId:  !Ref VPC
    Type: 'AWS::EC2::Subnet'

  SubnetRouteTableAssociation:
    Properties:
      SubnetId: !Ref Subnet
      RouteTableId: !Ref VPCRouteTable
    Type: AWS::EC2::SubnetRouteTableAssociation

  VPC:
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: 'true'
      EnableDnsSupport: 'true'
      InstanceTenancy: 'default'
      Tags:
        -
          Key: Environment
          Value: Integration
        - 
          Key: Name
          Value: VPC
    Type: AWS::EC2::VPC
  
  VPCGatewayAttachment:
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId:  !Ref VPC
    Type: AWS::EC2::VPCGatewayAttachment
    
  VPCRouteTable:
    Properties:
      Tags:
        -
          Key:  Environment
          Value:  Integration
        -
          Key:  Name
          Value:  VPCRouteTable
      VpcId:  !Ref VPC
    Type: AWS::EC2::RouteTable

  WebServer:
    CreationPolicy:
      ResourceSignal:
        Timeout:  PT10M
    Properties:
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 8
            VolumeType: gp2
      IamInstanceProfile: !Ref InstanceProfileParameter
      InstanceType: !Ref InstanceTypeParameter
      ImageId: !Ref AmiParameter
      KeyName:  !Ref KeyPair
      SecurityGroupIds: 
        - !Ref SecurityGroup
      SubnetId: !Ref Subnet
      Tags:
        - 
          Key:  Environment  
          Value: Integration
        - 
          Key:  Name  
          Value: IntegrationWebServer
      # UserData:
      #   Fn::Base64: |
      #     #!/bin/bash
      #     sudo yum update -y
      #     sudo dnf install python3 augeas-libs -y
      #     sudo yum install nginx -y
      #     sudo service nginx start
      #     sudo yum install ruby -y
      #     sudo yum install wget -y
      #     sudo mkdir /home/cfn-install
      #     cd /home/cfn-install
      #     sudo wget https://aws-codedeploy-eu-west-2.s3.eu-west-2.amazonaws.com/latest/install
      #     sudo chmod +x ./install
      #     sudo ./install auto
      #     sudo rpm -Uvh https://packages.microsoft.com/config/centos/7/packages-microsoft-prod.rpm
      #     sudo yum install aspnetcore-runtime-6.0 -y
      #     sudo python3 -m venv /opt/certbot/
      #     sudo /opt/certbot/bin/pip install --upgrade pip
      #     sudo /opt/certbot/bin/pip install certbot certbot-nginx
      #     cd ~
      #     sudo wget https://dot.net/v1/dotnet-install.sh >> output.txt
      #     sudo chmod +x ./dotnet-install.sh >> output.txt
      #     sudo ./dotnet-install.sh >> output.txt
      #     sudo yum install dotnet-sdk-6.0 -y
      #     export PATH=/home/ec2-user/.dotnet:$PATH
      #     export DOTNET_CLI_HOME=/tmp/
      #     /opt/aws/bin/cfn-signal -e 0 --stack Integration --resource WebServer --region eu-west-2
    Type: AWS::EC2::Instance

Outputs:
  PublicIp:
    Description: Server's PublicIp Address
    Value:
      Fn::GetAtt:
        - WebServer
        - PublicIp